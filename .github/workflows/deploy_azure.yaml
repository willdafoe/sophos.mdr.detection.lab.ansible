name: Deploy to Azure

on:
  workflow_dispatch:
    inputs:
      deployment_name:
        type: choice
        description: Which deployment to run
        options:
          - microsoft_defender
        required: true
        default: microsoft_defender
      trusted_ip:
        type: string
        description: The IP address to whitelist remote access. Must be provided in CIDR notation. 
        required: true
      name:
        type: string
        required: true
        description: A custom name for the deployment label
      namespace:
        type: string
        required: true
        description: A custom namespace for the deployment label
      state:
        type: choice
        description: Equivalent to the terraform command. apply = present, destroy = absent, plan = planned
        options:
          - present
          - planned
          - absent
        required: true
        default: present
      location:
        type: string
        required: true
        description: The Azure region to deploy to
      address_space:
        type: string
        required: true
        description: The address space to use for the virtual network
      admin_username:
        type: string
        required: true
        description: The username for the domain admin account
        default: sophos
      admin_password:
        type: string
        required: true
        description: The password for the domain admin account
      dns_domai_name:
        type: string
        required: true
        description: The DNS domain name to join
        default: sophos.local

env:
  microsoft_defender: willdafoe/mdr.microsoft.defender.detection_lab

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      project_path: ${{ steps.setvars.outputs.project_path }}
      repo_uri: ${{ steps.setvars.outputs.repo_uri }}
    steps:
      - name: define lab to deploy
        id: setvars
        run: |
          if [ "${{ github.event.inputs.deployment_name }}" == "microsoft_defender" ]; then
            echo "::set-output name=project_path::./workspace/microsoft_defender"
            echo "::set-output name=repo_uri::${{ env.microsoft_defender }}"
          fi
  deploy:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v3   
      - name: Checkout workspace repository
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.init.outputs.repo_uri }}
          path: ./workspace/
          token: ${{ github.token }}
      - name: Checking if repository was successfully cloned
        run: |
          ls -la ./workspace

  