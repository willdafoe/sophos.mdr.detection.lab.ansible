name: Deploy to Azure

on:
  workflow_dispatch:
    inputs:
      deployment_name:
        type: choice
        description: Which deployment to run
        options:
          - microsoft_defender
        required: true
        default: microsoft_defender
      trusted_ip:
        type: string
        description: The IP address to whitelist remote access. Must be provided in CIDR notation. 
        required: true
        default: 0.0.0.0/0
      name:
        type: string
        required: true
        description: A custom name for the deployment label
        default: github
      terraform_command:
        type: choice
        required: true
        description: The terraform command to run
        options:
          - plan
          - apply
          - destroy
        default: plan
      environment:
        type: choice
        required: true
        description: The environment to deploy to
        options:
          - dev
          - prod
          - test
          - qa
        default: prod
      location:
        type: string
        required: true
        description: The Azure region to deploy to
        default: eastus
      address_space:
        type: string
        required: true
        description: The address space to use for the virtual network
        default: 192.168.0.0/16 
      admin_username:
        type: string
        required: true
        description: The username for the domain admin account
        default: sophos
      admin_password:
        type: string
        required: true
        description: The password for the domain admin account
        default: P@$$w0rd!
      dns_domain_name:
        type: string
        required: true
        description: The DNS domain name to join
        default: sophos.local
permissions:
  id-token: write
  contents: read

env:
  microsoft_defender: willdafoe/terraform-azure-microsoft_defender

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      project_path: ${{ steps.setvars.outputs.project_path }}
      repo_uri: ${{ steps.setvars.outputs.repo_uri }}
    steps:
      - name: define lab to deploy
        id: setvars
        run: |
          if [ "${{ github.event.inputs.deployment_name }}" == "microsoft_defender" ]; then
            echo "::set-output name=project_path::${{ github.workspace }}/workspace/${{ github.event.inputs.deployment_name }}"
            echo "::set-output name=repo_uri::${{ env.microsoft_defender }}"
          fi
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      repo_uri: ${{ needs.init.outputs.repo_uri }}
      project_path: ${{ needs.init.outputs.project_path }}
      ANSIBLE_COLLECTIONS_PATH: ${{ github.workspace }}/collections
      ANSIBLE_FORCE_COLOR: False
      ANSIBLE_STDOUT_CALLBACK: unixy
      ANSIBLE_LOAD_CALLBACK_PLUGINS: True
      ANSIBLE_INVENTORY_ENABLED: 'azure_rm'
      TF_VAR_name: ${{ github.event.inputs.name }}
      TF_VAR_namespace: ${{ github.event.inputs.namespace }}
      TF_VAR_location: ${{ github.event.inputs.location }}
      TF_VAR_address_space: ${{ github.event.inputs.address_space }}
      TF_VAR_trusted_ip: ${{ github.event.inputs.trusted_ip }}
      TFE_TOKEN: ${{ secrets.TF_API_TOKEN }}
    needs: init
    steps:
      - name: Checking environment variables
        run: |
          echo repo_uri: ${{ env.repo_uri }} && \
          echo project_path: ${{ env.project_path }} 
      - name: Checkout repository
        uses: actions/checkout@v3   
      - name: Checkout workspace repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.repo_uri }}
          path: ${{ env.project_path }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}      
      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.6.1
        with:
         # directory: ${{ env.project_path }}/ansible
          playbook: ${{ env.project_path }}/ansible/playbook.yml
          requirements: ${{ github.workspace }}/requirements.yml
          options:
            --extra-vars deployment_name="${{ github.event.inputs.deployment_name }}"
            --extra-vars trusted_ip="${{ github.event.inputs.trusted_ip }}"
            --extra-vars name="${{ github.event.inputs.name }}"
            --extra-vars namespace="${{ github.event.inputs.namespace }}"
            --extra-vars tf_command="${{ github.event.inputs.terraform_command }}"
            --extra-vars location="${{ github.event.inputs.location }}"
            --extra-vars address_space="${{ github.event.inputs.address_space }}"
            --extra-vars admin_username="${{ github.event.inputs.admin_username }}"
            --extra-vars admin_password="${{ github.event.inputs.admin_password }}"
            --extra-vars dns_domain_name="${{ github.event.inputs.dns_domain_name }}"
