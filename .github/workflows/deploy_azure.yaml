name: Deploy to Azure

on:
  workflow_dispatch:
    inputs:
      deployment_name:
        type: choice
        description: Which deployment to run
        options:
          - microsoft_defender
        required: true
        default: microsoft_defender
      trusted_ip:
        type: string
        description: The IP address to whitelist remote access. Must be provided in CIDR notation. 
        required: true
        default: 0.0.0.0/0
      name:
        type: string
        required: true
        description: A custom name for the deployment label
        default: github
      namespace:
        type: string
        required: true
        description: A custom namespace for the deployment label
        default: github actions
      tf_command:
        type: choice
        description: Equivalent to the terraform command. apply = present, destroy = absent, plan = planned
        options:
          - plan
          - apply
          - destroy
        required: true
        default: plan
      location:
        type: string
        required: true
        description: The Azure region to deploy to
        default: eastus
      address_space:
        type: string
        required: true
        description: The address space to use for the virtual network
        default: 192.168.0.0/16 
      admin_username:
        type: string
        required: true
        description: The username for the domain admin account
        default: sophos
      admin_password:
        type: string
        required: true
        description: The password for the domain admin account
        default: P@$$w0rd!
      dns_domai_name:
        type: string
        required: true
        description: The DNS domain name to join
        default: sophos.local

env:
  microsoft_defender: willdafoe/mdr.microsoft.defender.detection_lab

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      project_path: ${{ steps.setvars.outputs.project_path }}
      repo_uri: ${{ steps.setvars.outputs.repo_uri }}
    steps:
      - name: define lab to deploy
        id: setvars
        run: |
          if [ "${{ github.event.inputs.deployment_name }}" == "microsoft_defender" ]; then
            echo "::set-output name=project_path::${{ github.workspace }}/workspace/${{ github.event.inputs.deployment_name }}"
            echo "::set-output name=repo_uri::${{ env.microsoft_defender }}"
          fi
  deploy:
    runs-on: ubuntu-latest
    env:
      repo_uri: ${{ needs.init.outputs.repo_uri }}
      project_path: ${{ needs.init.outputs.project_path }}
      ANSIBLE_COLLECTIONS_PATH: ./collections
      ANSIBLE_FORCE_COLOR: False
      ANSIBLE_STDOUT_CALLBACK: unixy
      ANSIBLE_LOAD_CALLBACK_PLUGINS: True
      ANSIBLE_INVENTORY_ENABLED: 'azure_rm'
    needs: init
    steps:
      - name: Checking environment variables
        run: |
          echo repo_uri: ${{ env.repo_uri }} && \
          echo project_path: ${{ env.project_path }} 
      - name: Checkout repository
        uses: actions/checkout@v3   
      - name: Checkout workspace repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.repo_uri }}
          path: ${{ env.project_path }}
          token: ${{ github.token }}
      - name: Checking project path
        run: |
          echo ls -lah ${{ env.project_path }}

  